package dsms.client.corba.DSMSApp;


import org.omg.CORBA.BAD_OPERATION;
import org.omg.CORBA.CompletionStatus;
import org.omg.CORBA.ORB;
import org.omg.CORBA.portable.InputStream;
import org.omg.CORBA.portable.InvokeHandler;
import org.omg.CORBA.portable.OutputStream;
import org.omg.CORBA.portable.ResponseHandler;
import org.omg.PortableServer.POA;
import org.omg.PortableServer.Servant;

import java.util.Hashtable;

/**
* dsms/client/corba/DSMSApp/DSMSPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from dsms/client/corba/DSMS.idl
* Tuesday, August 9, 2016 2:17:05 AM EDT
*/

public abstract class DSMSPOA extends Servant
 implements DSMSOperations, InvokeHandler
{

  // Constructors

  private static Hashtable _methods = new Hashtable ();
  static
  {
    _methods.put ("createDrecord", new Integer (0));
    _methods.put ("createNrecord", new Integer (1));
    _methods.put ("EditData", new Integer (2));
    _methods.put ("transferRecord", new Integer (3));
    _methods.put ("getRecordCount", new Integer (4));
  }

  public OutputStream _invoke (String $method,
                                InputStream in,
                                ResponseHandler $rh)
  {
    OutputStream out = null;
    Integer __method = (Integer)_methods.get ($method);
    if (__method == null)
      throw new BAD_OPERATION (0, CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // DSMSApp/DSMS/createDrecord
       {
         String MID = in.read_string ();
         String id = in.read_string ();
         String FirstName = in.read_string ();
         String LastName = in.read_string ();
         String PhoneNumber = in.read_string ();
         String Address = in.read_string ();
         String Specialization = in.read_string ();
         String Location = in.read_string ();
         this.createDrecord (MID, id, FirstName, LastName, PhoneNumber, Address, Specialization, Location);
         out = $rh.createReply();
         break;
       }

       case 1:  // DSMSApp/DSMS/createNrecord
       {
         String MID = in.read_string ();
         String id = in.read_string ();
         String firstName = in.read_string ();
         String lastName = in.read_string ();
         String designation = in.read_string ();
         String status = in.read_string ();
         String statusDate = in.read_string ();
         this.createNrecord (MID, id, firstName, lastName, designation, status, statusDate);
         out = $rh.createReply();
         break;
       }

       case 2:  // DSMSApp/DSMS/EditData
       {
         String MID = in.read_string ();
         String id = in.read_string ();
         String fieldName = in.read_string ();
         String newValue = in.read_string ();
         this.EditData (MID, id, fieldName, newValue);
         out = $rh.createReply();
         break;
       }

       case 3:  // DSMSApp/DSMS/transferRecord
       {
         String managerID = in.read_string ();
         String recordID = in.read_string ();
         String remoteClinicServerName = in.read_string ();
         this.transferRecord (managerID, recordID, remoteClinicServerName);
         out = $rh.createReply();
         break;
       }

       case 4:  // DSMSApp/DSMS/getRecordCount
       {
         String managerID = in.read_string ();
         this.getRecordCount (managerID);
         out = $rh.createReply();
         break;
       }

       default:
         throw new BAD_OPERATION (0, CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:DSMSApp/DSMS:1.0"};

  public String[] _all_interfaces (POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public DSMS _this() 
  {
    return DSMSHelper.narrow(
    super._this_object());
  }

  public DSMS _this(ORB orb)
  {
    return DSMSHelper.narrow(
    super._this_object(orb));
  }


} // class DSMSPOA
